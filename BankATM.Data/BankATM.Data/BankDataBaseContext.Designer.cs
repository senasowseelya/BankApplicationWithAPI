//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BankDataModel", "FK__account__bankId__29572725", "bank", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BankATM.Data.bank), "account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BankATM.Data.account), true)]
[assembly: EdmRelationshipAttribute("BankDataModel", "FK__account__userId__2A4B4B5E", "bankuser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BankATM.Data.bankuser), "account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BankATM.Data.account), true)]
[assembly: EdmRelationshipAttribute("BankDataModel", "FK__transacti__recei__571DF1D5", "account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BankATM.Data.account), "transactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BankATM.Data.transaction), true)]
[assembly: EdmRelationshipAttribute("BankDataModel", "FK__transacti__sende__5629CD9C", "account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BankATM.Data.account), "transactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BankATM.Data.transaction), true)]
[assembly: EdmRelationshipAttribute("BankDataModel", "FK__Currency__bankid__2E1BDC42", "bank", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BankATM.Data.bank), "currency", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BankATM.Data.currency), true)]
[assembly: EdmRelationshipAttribute("BankDataModel", "FK__employee__bankId__398D8EEE", "bank", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BankATM.Data.bank), "employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BankATM.Data.employee), true)]
[assembly: EdmRelationshipAttribute("BankDataModel", "FK__serviceCh__bankI__3E52440B", "bank", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BankATM.Data.bank), "serviceCharge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BankATM.Data.serviceCharge), true)]
[assembly: EdmRelationshipAttribute("BankDataModel", "FK__employee__userId__3A81B327", "bankuser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BankATM.Data.bankuser), "employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BankATM.Data.employee), true)]
[assembly: EdmRelationshipAttribute("BankDataModel", "FK__transacti__curre__59063A47", "currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BankATM.Data.currency), "transactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BankATM.Data.transaction), true)]
[assembly: EdmRelationshipAttribute("BankDataModel", "FK__transactio__type__5812160E", "transactionType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BankATM.Data.transactionType), "transactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BankATM.Data.transaction), true)]

#endregion

namespace BankATM.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BankDataEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BankDataEntities object using the connection string found in the 'BankDataEntities' section of the application configuration file.
        /// </summary>
        public BankDataEntities() : base("name=BankDataEntities", "BankDataEntities")
        {
            //this.ContextOptions.LazyLoadingEnabled = true;
            this.ContextOptions.LazyLoadingEnabled = false;
            this.ContextOptions.ProxyCreationEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BankDataEntities object.
        /// </summary>
        public BankDataEntities(string connectionString) : base(connectionString, "BankDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BankDataEntities object.
        /// </summary>
        public BankDataEntities(EntityConnection connection) : base(connection, "BankDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<account> accounts
        {
            get
            {
                if ((_accounts == null))
                {
                    _accounts = base.CreateObjectSet<account>("accounts");
                }
                return _accounts;
            }
        }
        private ObjectSet<account> _accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<bank> banks
        {
            get
            {
                if ((_banks == null))
                {
                    _banks = base.CreateObjectSet<bank>("banks");
                }
                return _banks;
            }
        }
        private ObjectSet<bank> _banks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<bankuser> bankusers
        {
            get
            {
                if ((_bankusers == null))
                {
                    _bankusers = base.CreateObjectSet<bankuser>("bankusers");
                }
                return _bankusers;
            }
        }
        private ObjectSet<bankuser> _bankusers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<currency> currencies
        {
            get
            {
                if ((_currencies == null))
                {
                    _currencies = base.CreateObjectSet<currency>("currencies");
                }
                return _currencies;
            }
        }
        private ObjectSet<currency> _currencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<employee> employees
        {
            get
            {
                if ((_employees == null))
                {
                    _employees = base.CreateObjectSet<employee>("employees");
                }
                return _employees;
            }
        }
        private ObjectSet<employee> _employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<serviceCharge> serviceCharges
        {
            get
            {
                if ((_serviceCharges == null))
                {
                    _serviceCharges = base.CreateObjectSet<serviceCharge>("serviceCharges");
                }
                return _serviceCharges;
            }
        }
        private ObjectSet<serviceCharge> _serviceCharges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<transaction> transactions
        {
            get
            {
                if ((_transactions == null))
                {
                    _transactions = base.CreateObjectSet<transaction>("transactions");
                }
                return _transactions;
            }
        }
        private ObjectSet<transaction> _transactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<transactionType> transactionTypes
        {
            get
            {
                if ((_transactionTypes == null))
                {
                    _transactionTypes = base.CreateObjectSet<transactionType>("transactionTypes");
                }
                return _transactionTypes;
            }
        }
        private ObjectSet<transactionType> _transactionTypes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaccounts(account account)
        {
            base.AddObject("accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the banks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobanks(bank bank)
        {
            base.AddObject("banks", bank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the bankusers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobankusers(bankuser bankuser)
        {
            base.AddObject("bankusers", bankuser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the currencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocurrencies(currency currency)
        {
            base.AddObject("currencies", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToemployees(employee employee)
        {
            base.AddObject("employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the serviceCharges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToserviceCharges(serviceCharge serviceCharge)
        {
            base.AddObject("serviceCharges", serviceCharge);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the transactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotransactions(transaction transaction)
        {
            base.AddObject("transactions", transaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the transactionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotransactionTypes(transactionType transactionType)
        {
            base.AddObject("transactionTypes", transactionType);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BankDataModel", Name="account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new account object.
        /// </summary>
        /// <param name="accountId">Initial value of the accountId property.</param>
        /// <param name="accountNumber">Initial value of the accountNumber property.</param>
        /// <param name="balance">Initial value of the balance property.</param>
        /// <param name="status">Initial value of the status property.</param>
        /// <param name="dateOfIssue">Initial value of the dateOfIssue property.</param>
        public static account Createaccount(global::System.String accountId, global::System.String accountNumber, global::System.Decimal balance, global::System.String status, global::System.DateTime dateOfIssue)
        {
            account account = new account();
            account.accountId = accountId;
            account.accountNumber = accountNumber;
            account.balance = balance;
            account.status = status;
            account.dateOfIssue = dateOfIssue;
            return account;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String accountId
        {
            get
            {
                return _accountId;
            }
            set
            {
                if (_accountId != value)
                {
                    OnaccountIdChanging(value);
                    ReportPropertyChanging("accountId");
                    _accountId = StructuralObject.SetValidValue(value, false, "accountId");
                    ReportPropertyChanged("accountId");
                    OnaccountIdChanged();
                }
            }
        }
        private global::System.String _accountId;
        partial void OnaccountIdChanging(global::System.String value);
        partial void OnaccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String bankId
        {
            get
            {
                return _bankId;
            }
            set
            {
                OnbankIdChanging(value);
                ReportPropertyChanging("bankId");
                _bankId = StructuralObject.SetValidValue(value, true, "bankId");
                ReportPropertyChanged("bankId");
                OnbankIdChanged();
            }
        }
        private global::System.String _bankId;
        partial void OnbankIdChanging(global::System.String value);
        partial void OnbankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String accountNumber
        {
            get
            {
                return _accountNumber;
            }
            set
            {
                OnaccountNumberChanging(value);
                ReportPropertyChanging("accountNumber");
                _accountNumber = StructuralObject.SetValidValue(value, false, "accountNumber");
                ReportPropertyChanged("accountNumber");
                OnaccountNumberChanged();
            }
        }
        private global::System.String _accountNumber;
        partial void OnaccountNumberChanging(global::System.String value);
        partial void OnaccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal balance
        {
            get
            {
                return _balance;
            }
            set
            {
                OnbalanceChanging(value);
                ReportPropertyChanging("balance");
                _balance = StructuralObject.SetValidValue(value, "balance");
                ReportPropertyChanged("balance");
                OnbalanceChanged();
            }
        }
        private global::System.Decimal _balance;
        partial void OnbalanceChanging(global::System.Decimal value);
        partial void OnbalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value, false, "status");
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.String _status;
        partial void OnstatusChanging(global::System.String value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateOfIssue
        {
            get
            {
                return _dateOfIssue;
            }
            set
            {
                OndateOfIssueChanging(value);
                ReportPropertyChanging("dateOfIssue");
                _dateOfIssue = StructuralObject.SetValidValue(value, "dateOfIssue");
                ReportPropertyChanged("dateOfIssue");
                OndateOfIssueChanged();
            }
        }
        private global::System.DateTime _dateOfIssue;
        partial void OndateOfIssueChanging(global::System.DateTime value);
        partial void OndateOfIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userId
        {
            get
            {
                return _userId;
            }
            set
            {
                OnuserIdChanging(value);
                ReportPropertyChanging("userId");
                _userId = StructuralObject.SetValidValue(value, true, "userId");
                ReportPropertyChanged("userId");
                OnuserIdChanged();
            }
        }
        private global::System.String _userId;
        partial void OnuserIdChanging(global::System.String value);
        partial void OnuserIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__account__bankId__29572725", "bank")]
        public bank bank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("BankDataModel.FK__account__bankId__29572725", "bank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("BankDataModel.FK__account__bankId__29572725", "bank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<bank> bankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("BankDataModel.FK__account__bankId__29572725", "bank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<bank>("BankDataModel.FK__account__bankId__29572725", "bank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__account__userId__2A4B4B5E", "bankuser")]
        public bankuser bankuser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bankuser>("BankDataModel.FK__account__userId__2A4B4B5E", "bankuser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bankuser>("BankDataModel.FK__account__userId__2A4B4B5E", "bankuser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<bankuser> bankuserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bankuser>("BankDataModel.FK__account__userId__2A4B4B5E", "bankuser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<bankuser>("BankDataModel.FK__account__userId__2A4B4B5E", "bankuser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__transacti__recei__571DF1D5", "transactions")]
        public EntityCollection<transaction> transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<transaction>("BankDataModel.FK__transacti__recei__571DF1D5", "transactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<transaction>("BankDataModel.FK__transacti__recei__571DF1D5", "transactions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__transacti__sende__5629CD9C", "transactions")]
        public EntityCollection<transaction> transactions1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<transaction>("BankDataModel.FK__transacti__sende__5629CD9C", "transactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<transaction>("BankDataModel.FK__transacti__sende__5629CD9C", "transactions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BankDataModel", Name="bank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class bank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new bank object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="branch">Initial value of the branch property.</param>
        /// <param name="ifsc">Initial value of the ifsc property.</param>
        /// <param name="balance">Initial value of the balance property.</param>
        public static bank Createbank(global::System.String id, global::System.String name, global::System.String branch, global::System.String ifsc, global::System.Decimal balance)
        {
            bank bank = new bank();
            bank.id = id;
            bank.name = name;
            bank.branch = branch;
            bank.ifsc = ifsc;
            bank.balance = balance;
            return bank;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, false, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.String _id;
        partial void OnidChanging(global::System.String value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch
        {
            get
            {
                return _branch;
            }
            set
            {
                OnbranchChanging(value);
                ReportPropertyChanging("branch");
                _branch = StructuralObject.SetValidValue(value, false, "branch");
                ReportPropertyChanged("branch");
                OnbranchChanged();
            }
        }
        private global::System.String _branch;
        partial void OnbranchChanging(global::System.String value);
        partial void OnbranchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ifsc
        {
            get
            {
                return _ifsc;
            }
            set
            {
                OnifscChanging(value);
                ReportPropertyChanging("ifsc");
                _ifsc = StructuralObject.SetValidValue(value, false, "ifsc");
                ReportPropertyChanged("ifsc");
                OnifscChanged();
            }
        }
        private global::System.String _ifsc;
        partial void OnifscChanging(global::System.String value);
        partial void OnifscChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal balance
        {
            get
            {
                return _balance;
            }
            set
            {
                OnbalanceChanging(value);
                ReportPropertyChanging("balance");
                _balance = StructuralObject.SetValidValue(value, "balance");
                ReportPropertyChanged("balance");
                OnbalanceChanged();
            }
        }
        private global::System.Decimal _balance;
        partial void OnbalanceChanging(global::System.Decimal value);
        partial void OnbalanceChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__account__bankId__29572725", "account")]
        public EntityCollection<account> accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<account>("BankDataModel.FK__account__bankId__29572725", "account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<account>("BankDataModel.FK__account__bankId__29572725", "account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__Currency__bankid__2E1BDC42", "currency")]
        public EntityCollection<currency> currencies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<currency>("BankDataModel.FK__Currency__bankid__2E1BDC42", "currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<currency>("BankDataModel.FK__Currency__bankid__2E1BDC42", "currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__employee__bankId__398D8EEE", "employee")]
        public EntityCollection<employee> employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<employee>("BankDataModel.FK__employee__bankId__398D8EEE", "employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<employee>("BankDataModel.FK__employee__bankId__398D8EEE", "employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__serviceCh__bankI__3E52440B", "serviceCharge")]
        public EntityCollection<serviceCharge> serviceCharges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<serviceCharge>("BankDataModel.FK__serviceCh__bankI__3E52440B", "serviceCharge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<serviceCharge>("BankDataModel.FK__serviceCh__bankI__3E52440B", "serviceCharge", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BankDataModel", Name="bankuser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class bankuser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new bankuser object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="age">Initial value of the age property.</param>
        /// <param name="dob">Initial value of the dob property.</param>
        /// <param name="contactNumber">Initial value of the contactNumber property.</param>
        /// <param name="aadharNumber">Initial value of the aadharNumber property.</param>
        /// <param name="nationality">Initial value of the nationality property.</param>
        public static bankuser Createbankuser(global::System.String id, global::System.String name, global::System.String password, global::System.Int32 age, global::System.DateTime dob, global::System.String contactNumber, global::System.Int64 aadharNumber, global::System.String nationality)
        {
            bankuser bankuser = new bankuser();
            bankuser.id = id;
            bankuser.name = name;
            bankuser.password = password;
            bankuser.age = age;
            bankuser.dob = dob;
            bankuser.contactNumber = contactNumber;
            bankuser.aadharNumber = aadharNumber;
            bankuser.nationality = nationality;
            return bankuser;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, false, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.String _id;
        partial void OnidChanging(global::System.String value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false, "password");
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 age
        {
            get
            {
                return _age;
            }
            set
            {
                OnageChanging(value);
                ReportPropertyChanging("age");
                _age = StructuralObject.SetValidValue(value, "age");
                ReportPropertyChanged("age");
                OnageChanged();
            }
        }
        private global::System.Int32 _age;
        partial void OnageChanging(global::System.Int32 value);
        partial void OnageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dob
        {
            get
            {
                return _dob;
            }
            set
            {
                OndobChanging(value);
                ReportPropertyChanging("dob");
                _dob = StructuralObject.SetValidValue(value, "dob");
                ReportPropertyChanged("dob");
                OndobChanged();
            }
        }
        private global::System.DateTime _dob;
        partial void OndobChanging(global::System.DateTime value);
        partial void OndobChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String contactNumber
        {
            get
            {
                return _contactNumber;
            }
            set
            {
                OncontactNumberChanging(value);
                ReportPropertyChanging("contactNumber");
                _contactNumber = StructuralObject.SetValidValue(value, false, "contactNumber");
                ReportPropertyChanged("contactNumber");
                OncontactNumberChanged();
            }
        }
        private global::System.String _contactNumber;
        partial void OncontactNumberChanging(global::System.String value);
        partial void OncontactNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 aadharNumber
        {
            get
            {
                return _aadharNumber;
            }
            set
            {
                OnaadharNumberChanging(value);
                ReportPropertyChanging("aadharNumber");
                _aadharNumber = StructuralObject.SetValidValue(value, "aadharNumber");
                ReportPropertyChanged("aadharNumber");
                OnaadharNumberChanged();
            }
        }
        private global::System.Int64 _aadharNumber;
        partial void OnaadharNumberChanging(global::System.Int64 value);
        partial void OnaadharNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nationality
        {
            get
            {
                return _nationality;
            }
            set
            {
                OnnationalityChanging(value);
                ReportPropertyChanging("nationality");
                _nationality = StructuralObject.SetValidValue(value, false, "nationality");
                ReportPropertyChanged("nationality");
                OnnationalityChanged();
            }
        }
        private global::System.String _nationality;
        partial void OnnationalityChanging(global::System.String value);
        partial void OnnationalityChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__account__userId__2A4B4B5E", "account")]
        public EntityCollection<account> accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<account>("BankDataModel.FK__account__userId__2A4B4B5E", "account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<account>("BankDataModel.FK__account__userId__2A4B4B5E", "account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__employee__userId__3A81B327", "employee")]
        public EntityCollection<employee> employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<employee>("BankDataModel.FK__employee__userId__3A81B327", "employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<employee>("BankDataModel.FK__employee__userId__3A81B327", "employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BankDataModel", Name="currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new currency object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="exchangeRate">Initial value of the exchangeRate property.</param>
        /// <param name="bankid">Initial value of the bankid property.</param>
        public static currency Createcurrency(global::System.String id, global::System.Decimal exchangeRate, global::System.String bankid)
        {
            currency currency = new currency();
            currency.id = id;
            currency.exchangeRate = exchangeRate;
            currency.bankid = bankid;
            return currency;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, false, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.String _id;
        partial void OnidChanging(global::System.String value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal exchangeRate
        {
            get
            {
                return _exchangeRate;
            }
            set
            {
                OnexchangeRateChanging(value);
                ReportPropertyChanging("exchangeRate");
                _exchangeRate = StructuralObject.SetValidValue(value, "exchangeRate");
                ReportPropertyChanged("exchangeRate");
                OnexchangeRateChanged();
            }
        }
        private global::System.Decimal _exchangeRate;
        partial void OnexchangeRateChanging(global::System.Decimal value);
        partial void OnexchangeRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String bankid
        {
            get
            {
                return _bankid;
            }
            set
            {
                OnbankidChanging(value);
                ReportPropertyChanging("bankid");
                _bankid = StructuralObject.SetValidValue(value, false, "bankid");
                ReportPropertyChanged("bankid");
                OnbankidChanged();
            }
        }
        private global::System.String _bankid;
        partial void OnbankidChanging(global::System.String value);
        partial void OnbankidChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__Currency__bankid__2E1BDC42", "bank")]
        public bank bank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("BankDataModel.FK__Currency__bankid__2E1BDC42", "bank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("BankDataModel.FK__Currency__bankid__2E1BDC42", "bank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<bank> bankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("BankDataModel.FK__Currency__bankid__2E1BDC42", "bank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<bank>("BankDataModel.FK__Currency__bankid__2E1BDC42", "bank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__transacti__curre__59063A47", "transactions")]
        public EntityCollection<transaction> transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<transaction>("BankDataModel.FK__transacti__curre__59063A47", "transactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<transaction>("BankDataModel.FK__transacti__curre__59063A47", "transactions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BankDataModel", Name="employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new employee object.
        /// </summary>
        /// <param name="employeeId">Initial value of the employeeId property.</param>
        /// <param name="bankId">Initial value of the bankId property.</param>
        /// <param name="userId">Initial value of the userId property.</param>
        public static employee Createemployee(global::System.String employeeId, global::System.String bankId, global::System.String userId)
        {
            employee employee = new employee();
            employee.employeeId = employeeId;
            employee.bankId = bankId;
            employee.userId = userId;
            return employee;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String employeeId
        {
            get
            {
                return _employeeId;
            }
            set
            {
                if (_employeeId != value)
                {
                    OnemployeeIdChanging(value);
                    ReportPropertyChanging("employeeId");
                    _employeeId = StructuralObject.SetValidValue(value, false, "employeeId");
                    ReportPropertyChanged("employeeId");
                    OnemployeeIdChanged();
                }
            }
        }
        private global::System.String _employeeId;
        partial void OnemployeeIdChanging(global::System.String value);
        partial void OnemployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String bankId
        {
            get
            {
                return _bankId;
            }
            set
            {
                OnbankIdChanging(value);
                ReportPropertyChanging("bankId");
                _bankId = StructuralObject.SetValidValue(value, false, "bankId");
                ReportPropertyChanged("bankId");
                OnbankIdChanged();
            }
        }
        private global::System.String _bankId;
        partial void OnbankIdChanging(global::System.String value);
        partial void OnbankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String userId
        {
            get
            {
                return _userId;
            }
            set
            {
                OnuserIdChanging(value);
                ReportPropertyChanging("userId");
                _userId = StructuralObject.SetValidValue(value, false, "userId");
                ReportPropertyChanged("userId");
                OnuserIdChanged();
            }
        }
        private global::System.String _userId;
        partial void OnuserIdChanging(global::System.String value);
        partial void OnuserIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__employee__bankId__398D8EEE", "bank")]
        public bank bank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("BankDataModel.FK__employee__bankId__398D8EEE", "bank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("BankDataModel.FK__employee__bankId__398D8EEE", "bank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<bank> bankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("BankDataModel.FK__employee__bankId__398D8EEE", "bank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<bank>("BankDataModel.FK__employee__bankId__398D8EEE", "bank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__employee__userId__3A81B327", "bankuser")]
        public bankuser bankuser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bankuser>("BankDataModel.FK__employee__userId__3A81B327", "bankuser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bankuser>("BankDataModel.FK__employee__userId__3A81B327", "bankuser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<bankuser> bankuserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bankuser>("BankDataModel.FK__employee__userId__3A81B327", "bankuser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<bankuser>("BankDataModel.FK__employee__userId__3A81B327", "bankuser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BankDataModel", Name="serviceCharge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class serviceCharge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new serviceCharge object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="value">Initial value of the value property.</param>
        public static serviceCharge CreateserviceCharge(global::System.String id, global::System.String name, global::System.Decimal value)
        {
            serviceCharge serviceCharge = new serviceCharge();
            serviceCharge.id = id;
            serviceCharge.name = name;
            serviceCharge.value = value;
            return serviceCharge;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, false, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.String _id;
        partial void OnidChanging(global::System.String value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, "value");
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.Decimal _value;
        partial void OnvalueChanging(global::System.Decimal value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String bankId
        {
            get
            {
                return _bankId;
            }
            set
            {
                OnbankIdChanging(value);
                ReportPropertyChanging("bankId");
                _bankId = StructuralObject.SetValidValue(value, true, "bankId");
                ReportPropertyChanged("bankId");
                OnbankIdChanged();
            }
        }
        private global::System.String _bankId;
        partial void OnbankIdChanging(global::System.String value);
        partial void OnbankIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__serviceCh__bankI__3E52440B", "bank")]
        public bank bank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("BankDataModel.FK__serviceCh__bankI__3E52440B", "bank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("BankDataModel.FK__serviceCh__bankI__3E52440B", "bank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<bank> bankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<bank>("BankDataModel.FK__serviceCh__bankI__3E52440B", "bank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<bank>("BankDataModel.FK__serviceCh__bankI__3E52440B", "bank", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BankDataModel", Name="transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class transaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new transaction object.
        /// </summary>
        /// <param name="transid">Initial value of the transid property.</param>
        /// <param name="senderaccountId">Initial value of the senderaccountId property.</param>
        /// <param name="receiveraccountId">Initial value of the receiveraccountId property.</param>
        /// <param name="transactionOn">Initial value of the transactionOn property.</param>
        /// <param name="transactionAmount">Initial value of the transactionAmount property.</param>
        public static transaction Createtransaction(global::System.String transid, global::System.String senderaccountId, global::System.String receiveraccountId, global::System.DateTime transactionOn, global::System.Decimal transactionAmount)
        {
            transaction transaction = new transaction();
            transaction.transid = transid;
            transaction.senderaccountId = senderaccountId;
            transaction.receiveraccountId = receiveraccountId;
            transaction.transactionOn = transactionOn;
            transaction.transactionAmount = transactionAmount;
            return transaction;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String transid
        {
            get
            {
                return _transid;
            }
            set
            {
                if (_transid != value)
                {
                    OntransidChanging(value);
                    ReportPropertyChanging("transid");
                    _transid = StructuralObject.SetValidValue(value, false, "transid");
                    ReportPropertyChanged("transid");
                    OntransidChanged();
                }
            }
        }
        private global::System.String _transid;
        partial void OntransidChanging(global::System.String value);
        partial void OntransidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String senderaccountId
        {
            get
            {
                return _senderaccountId;
            }
            set
            {
                OnsenderaccountIdChanging(value);
                ReportPropertyChanging("senderaccountId");
                _senderaccountId = StructuralObject.SetValidValue(value, false, "senderaccountId");
                ReportPropertyChanged("senderaccountId");
                OnsenderaccountIdChanged();
            }
        }
        private global::System.String _senderaccountId;
        partial void OnsenderaccountIdChanging(global::System.String value);
        partial void OnsenderaccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String receiveraccountId
        {
            get
            {
                return _receiveraccountId;
            }
            set
            {
                OnreceiveraccountIdChanging(value);
                ReportPropertyChanging("receiveraccountId");
                _receiveraccountId = StructuralObject.SetValidValue(value, false, "receiveraccountId");
                ReportPropertyChanged("receiveraccountId");
                OnreceiveraccountIdChanged();
            }
        }
        private global::System.String _receiveraccountId;
        partial void OnreceiveraccountIdChanging(global::System.String value);
        partial void OnreceiveraccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime transactionOn
        {
            get
            {
                return _transactionOn;
            }
            set
            {
                OntransactionOnChanging(value);
                ReportPropertyChanging("transactionOn");
                _transactionOn = StructuralObject.SetValidValue(value, "transactionOn");
                ReportPropertyChanged("transactionOn");
                OntransactionOnChanged();
            }
        }
        private global::System.DateTime _transactionOn;
        partial void OntransactionOnChanging(global::System.DateTime value);
        partial void OntransactionOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal transactionAmount
        {
            get
            {
                return _transactionAmount;
            }
            set
            {
                OntransactionAmountChanging(value);
                ReportPropertyChanging("transactionAmount");
                _transactionAmount = StructuralObject.SetValidValue(value, "transactionAmount");
                ReportPropertyChanged("transactionAmount");
                OntransactionAmountChanged();
            }
        }
        private global::System.Decimal _transactionAmount;
        partial void OntransactionAmountChanging(global::System.Decimal value);
        partial void OntransactionAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, true, "type");
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String currency
        {
            get
            {
                return _currency;
            }
            set
            {
                OncurrencyChanging(value);
                ReportPropertyChanging("currency");
                _currency = StructuralObject.SetValidValue(value, true, "currency");
                ReportPropertyChanged("currency");
                OncurrencyChanged();
            }
        }
        private global::System.String _currency;
        partial void OncurrencyChanging(global::System.String value);
        partial void OncurrencyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__transacti__recei__571DF1D5", "account")]
        public account account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("BankDataModel.FK__transacti__recei__571DF1D5", "account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("BankDataModel.FK__transacti__recei__571DF1D5", "account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<account> accountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("BankDataModel.FK__transacti__recei__571DF1D5", "account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<account>("BankDataModel.FK__transacti__recei__571DF1D5", "account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__transacti__sende__5629CD9C", "account")]
        public account account1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("BankDataModel.FK__transacti__sende__5629CD9C", "account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("BankDataModel.FK__transacti__sende__5629CD9C", "account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<account> account1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("BankDataModel.FK__transacti__sende__5629CD9C", "account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<account>("BankDataModel.FK__transacti__sende__5629CD9C", "account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__transacti__curre__59063A47", "currency")]
        public currency currency1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("BankDataModel.FK__transacti__curre__59063A47", "currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("BankDataModel.FK__transacti__curre__59063A47", "currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<currency> currency1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("BankDataModel.FK__transacti__curre__59063A47", "currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<currency>("BankDataModel.FK__transacti__curre__59063A47", "currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__transactio__type__5812160E", "transactionType")]
        public transactionType transactionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transactionType>("BankDataModel.FK__transactio__type__5812160E", "transactionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transactionType>("BankDataModel.FK__transactio__type__5812160E", "transactionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<transactionType> transactionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transactionType>("BankDataModel.FK__transactio__type__5812160E", "transactionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<transactionType>("BankDataModel.FK__transactio__type__5812160E", "transactionType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BankDataModel", Name="transactionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class transactionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new transactionType object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static transactionType CreatetransactionType(global::System.String id)
        {
            transactionType transactionType = new transactionType();
            transactionType.id = id;
            return transactionType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, false, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.String _id;
        partial void OnidChanging(global::System.String value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BankDataModel", "FK__transactio__type__5812160E", "transactions")]
        public EntityCollection<transaction> transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<transaction>("BankDataModel.FK__transactio__type__5812160E", "transactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<transaction>("BankDataModel.FK__transactio__type__5812160E", "transactions", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
